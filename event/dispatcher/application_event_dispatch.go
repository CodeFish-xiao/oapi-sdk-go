// Package dispatcher code generated by oapi sdk gen
package dispatcher

import (
	"context"
	"github.com/larksuite/oapi-sdk-go/service/application/v6"
)

func (dispatcher *EventDispatcher) OnApplicationCreatedV6(handler func(ctx context.Context, event *larkapplication.ApplicationCreatedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["application.application.created_v6"]
	if existed {
		panic("event: multiple handler registrations for " + "application.application.created_v6")
	}
	dispatcher.eventType2EventHandler["application.application.created_v6"] = larkapplication.NewApplicationCreatedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnApplicationAppVersionAuditV6(handler func(ctx context.Context, event *larkapplication.ApplicationAppVersionAuditEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["application.application.app_version.audit_v6"]
	if existed {
		panic("event: multiple handler registrations for " + "application.application.app_version.audit_v6")
	}
	dispatcher.eventType2EventHandler["application.application.app_version.audit_v6"] = larkapplication.NewApplicationAppVersionAuditEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnApplicationAppVersionPublishApplyV6(handler func(ctx context.Context, event *larkapplication.ApplicationAppVersionPublishApplyEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["application.application.app_version.publish_apply_v6"]
	if existed {
		panic("event: multiple handler registrations for " + "application.application.app_version.publish_apply_v6")
	}
	dispatcher.eventType2EventHandler["application.application.app_version.publish_apply_v6"] = larkapplication.NewApplicationAppVersionPublishApplyEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnApplicationAppVersionPublishRevokeV6(handler func(ctx context.Context, event *larkapplication.ApplicationAppVersionPublishRevokeEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["application.application.app_version.publish_revoke_v6"]
	if existed {
		panic("event: multiple handler registrations for " + "application.application.app_version.publish_revoke_v6")
	}
	dispatcher.eventType2EventHandler["application.application.app_version.publish_revoke_v6"] = larkapplication.NewApplicationAppVersionPublishRevokeEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnApplicationFeedbackCreatedV6(handler func(ctx context.Context, event *larkapplication.ApplicationFeedbackCreatedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["application.application.feedback.created_v6"]
	if existed {
		panic("event: multiple handler registrations for " + "application.application.feedback.created_v6")
	}
	dispatcher.eventType2EventHandler["application.application.feedback.created_v6"] = larkapplication.NewApplicationFeedbackCreatedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnApplicationFeedbackUpdatedV6(handler func(ctx context.Context, event *larkapplication.ApplicationFeedbackUpdatedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["application.application.feedback.updated_v6"]
	if existed {
		panic("event: multiple handler registrations for " + "application.application.feedback.updated_v6")
	}
	dispatcher.eventType2EventHandler["application.application.feedback.updated_v6"] = larkapplication.NewApplicationFeedbackUpdatedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnApplicationVisibilityAddedV6(handler func(ctx context.Context, event *larkapplication.ApplicationVisibilityAddedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["application.application.visibility.added_v6"]
	if existed {
		panic("event: multiple handler registrations for " + "application.application.visibility.added_v6")
	}
	dispatcher.eventType2EventHandler["application.application.visibility.added_v6"] = larkapplication.NewApplicationVisibilityAddedEventHandler(handler)
	return dispatcher
}
