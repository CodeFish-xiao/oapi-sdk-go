// Package dispatcher code generated by oapi sdk gen
package dispatcher

import (
	"context"
	"github.com/larksuite/oapi-sdk-go/service/meeting_room/v1"
)

func (dispatcher *EventDispatcher) OnMeetingRoomCreatedV1(handler func(ctx context.Context, event *larkmeeting_room.MeetingRoomCreatedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["meeting_room.meeting_room.created_v1"]
	if existed {
		panic("event: multiple handler registrations for " + "meeting_room.meeting_room.created_v1")
	}
	dispatcher.eventType2EventHandler["meeting_room.meeting_room.created_v1"] = larkmeeting_room.NewMeetingRoomCreatedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnMeetingRoomDeletedV1(handler func(ctx context.Context, event *larkmeeting_room.MeetingRoomDeletedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["meeting_room.meeting_room.deleted_v1"]
	if existed {
		panic("event: multiple handler registrations for " + "meeting_room.meeting_room.deleted_v1")
	}
	dispatcher.eventType2EventHandler["meeting_room.meeting_room.deleted_v1"] = larkmeeting_room.NewMeetingRoomDeletedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnMeetingRoomStatusChangedV1(handler func(ctx context.Context, event *larkmeeting_room.MeetingRoomStatusChangedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["meeting_room.meeting_room.status_changed_v1"]
	if existed {
		panic("event: multiple handler registrations for " + "meeting_room.meeting_room.status_changed_v1")
	}
	dispatcher.eventType2EventHandler["meeting_room.meeting_room.status_changed_v1"] = larkmeeting_room.NewMeetingRoomStatusChangedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnMeetingRoomUpdatedV1(handler func(ctx context.Context, event *larkmeeting_room.MeetingRoomUpdatedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["meeting_room.meeting_room.updated_v1"]
	if existed {
		panic("event: multiple handler registrations for " + "meeting_room.meeting_room.updated_v1")
	}
	dispatcher.eventType2EventHandler["meeting_room.meeting_room.updated_v1"] = larkmeeting_room.NewMeetingRoomUpdatedEventHandler(handler)
	return dispatcher
}
