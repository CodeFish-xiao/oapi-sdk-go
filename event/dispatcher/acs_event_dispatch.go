// Package dispatcher code generated by oapi sdk gen
package dispatcher

import (
	"context"
	"github.com/larksuite/oapi-sdk-go/v3/service/acs/v1"
)

func (dispatcher *EventDispatcher) OnP2AccessRecordCreatedV1(handler func(ctx context.Context, event *larkacs.P2AccessRecordCreatedV1) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["acs.access_record.created_v1"]
	if existed {
		panic("event: multiple handler registrations for " + "acs.access_record.created_v1")
	}
	dispatcher.eventType2EventHandler["acs.access_record.created_v1"] = larkacs.NewP2AccessRecordCreatedV1Handler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnP2UserUpdatedV1(handler func(ctx context.Context, event *larkacs.P2UserUpdatedV1) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["acs.user.updated_v1"]
	if existed {
		panic("event: multiple handler registrations for " + "acs.user.updated_v1")
	}
	dispatcher.eventType2EventHandler["acs.user.updated_v1"] = larkacs.NewP2UserUpdatedV1Handler(handler)
	return dispatcher
}
