// Package dispatcher code generated by oapi sdk gen
package dispatcher

import (
	"context"

	"github.com/larksuite/oapi-sdk-go/service/calendar/v4"
)

func (dispatcher *EventDispatcher) OnCalendarChangedV4(handler func(ctx context.Context, event *calendar.CalendarChangedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["calendar.calendar.changed_v4"]
	if existed {
		panic("event: multiple handler registrations for " + "calendar.calendar.changed_v4")
	}
	dispatcher.eventType2EventHandler["calendar.calendar.changed_v4"] = calendar.NewCalendarChangedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnCalendarAclCreatedV4(handler func(ctx context.Context, event *calendar.CalendarAclCreatedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["calendar.calendar.acl.created_v4"]
	if existed {
		panic("event: multiple handler registrations for " + "calendar.calendar.acl.created_v4")
	}
	dispatcher.eventType2EventHandler["calendar.calendar.acl.created_v4"] = calendar.NewCalendarAclCreatedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnCalendarAclDeletedV4(handler func(ctx context.Context, event *calendar.CalendarAclDeletedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["calendar.calendar.acl.deleted_v4"]
	if existed {
		panic("event: multiple handler registrations for " + "calendar.calendar.acl.deleted_v4")
	}
	dispatcher.eventType2EventHandler["calendar.calendar.acl.deleted_v4"] = calendar.NewCalendarAclDeletedEventHandler(handler)
	return dispatcher
}
func (dispatcher *EventDispatcher) OnCalendarEventChangedV4(handler func(ctx context.Context, event *calendar.CalendarEventChangedEvent) error) *EventDispatcher {
	_, existed := dispatcher.eventType2EventHandler["calendar.calendar.event.changed_v4"]
	if existed {
		panic("event: multiple handler registrations for " + "calendar.calendar.event.changed_v4")
	}
	dispatcher.eventType2EventHandler["calendar.calendar.event.changed_v4"] = calendar.NewCalendarEventChangedEventHandler(handler)
	return dispatcher
}
