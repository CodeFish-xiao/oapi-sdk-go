// Package v1 Code generated by lark suite oapi sdk gen
package v1

import (
	lark "github.com/larksuite/oapi-sdk-go/v2"
	"io"
)

type Mention struct {
	Key       string `json:"key,omitempty"`
	Id        string `json:"id,omitempty"`
	IdType    string `json:"id_type,omitempty"`
	Name      string `json:"name,omitempty"`
	TenantKey string `json:"tenant_key,omitempty"`
}

type MessageBody struct {
	Content string `json:"content,omitempty"`
}

type Sender struct {
	Id         string `json:"id,omitempty"`
	IdType     string `json:"id_type,omitempty"`
	SenderType string `json:"sender_type,omitempty"`
	TenantKey  string `json:"tenant_key,omitempty"`
}

type Message struct {
	MessageId      string       `json:"message_id,omitempty"`
	RootId         string       `json:"root_id,omitempty"`
	ParentId       string       `json:"parent_id,omitempty"`
	MsgType        string       `json:"msg_type,omitempty"`
	CreateTime     int64        `json:"create_time,omitempty,string"`
	UpdateTime     int64        `json:"update_time,omitempty,string"`
	Deleted        bool         `json:"deleted,omitempty"`
	Updated        bool         `json:"updated,omitempty"`
	ChatId         string       `json:"chat_id,omitempty"`
	Sender         *Sender      `json:"sender,omitempty"`
	Body           *MessageBody `json:"body,omitempty"`
	Mentions       []*Mention   `json:"mentions,omitempty"`
	UpperMessageId string       `json:"upper_message_id,omitempty"`
}

type ReceiveIdType string

func (receiveIdType ReceiveIdType) Ptr() *ReceiveIdType {
	return &receiveIdType
}

const (
	ReceiveIdTypeOpenId  ReceiveIdType = "open_id"
	ReceiveIdTypeUserId  ReceiveIdType = "user_id"
	ReceiveIdTypeUnionId ReceiveIdType = "union_id"
	ReceiveIdTypeEmail   ReceiveIdType = "email"
	ReceiveIdTypeChatId  ReceiveIdType = "chat_id"
)

type MessageCreateReq struct {
	ReceiveIdType *ReceiveIdType       `query:"receive_id_type"`
	Body          MessageCreateReqBody `body:""`
}

type MessageCreateReqBody struct {
	ReceiveId *string `json:"receive_id,omitempty"`
	Content   *string `json:"content,omitempty"`
	MsgType   *string `json:"msg_type,omitempty"`
}

type MessageCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *Message `json:"data"`
}

type FileCreateReq struct {
	FileType *string   `json:"file_type"`
	FileName *string   `json:"file_name"`
	Duration *int      `json:"duration"`
	File     io.Reader `json:"file"`
}

type FileCreateRespData struct {
	FileKey string `json:"file_key"`
}

type FileCreateResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	Data *FileCreateRespData `json:"data"`
}

type FileGetReq struct {
	FileKey string `path:"file_key"`
}

type FileGetResp struct {
	*lark.RawResponse `json:"-"`
	lark.CodeError
	File     io.Reader `json:"-"`
	FileName string    `json:"-"`
}
