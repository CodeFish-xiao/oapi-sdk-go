// Package acs code generated by oapi sdk gen
package acs

import (
	"context"
)

/**
消息处理器定义
**/
type AccessRecordCreatedEventHandler struct {
	handler func(context.Context, *AccessRecordCreatedEvent) error
}

func NewAccessRecordCreatedEventHandler(handler func(context.Context, *AccessRecordCreatedEvent) error) *AccessRecordCreatedEventHandler {
	h := &AccessRecordCreatedEventHandler{handler: handler}
	return h
}

/**
返回事件的消息体的实例，用于反序列化用
**/
func (h *AccessRecordCreatedEventHandler) Event() interface{} {
	return &AccessRecordCreatedEvent{}
}

/**
回调开发者注册的handle
r**/
func (h *AccessRecordCreatedEventHandler) Handle(ctx context.Context, event interface{}) error {
	return h.handler(ctx, event.(*AccessRecordCreatedEvent))
}

/**
消息处理器定义
**/
type UserUpdatedEventHandler struct {
	handler func(context.Context, *UserUpdatedEvent) error
}

func NewUserUpdatedEventHandler(handler func(context.Context, *UserUpdatedEvent) error) *UserUpdatedEventHandler {
	h := &UserUpdatedEventHandler{handler: handler}
	return h
}

/**
返回事件的消息体的实例，用于反序列化用
**/
func (h *UserUpdatedEventHandler) Event() interface{} {
	return &UserUpdatedEvent{}
}

/**
回调开发者注册的handle
r**/
func (h *UserUpdatedEventHandler) Handle(ctx context.Context, event interface{}) error {
	return h.handler(ctx, event.(*UserUpdatedEvent))
}
