// Package acs code generated by oapi sdk gen
package larkacs
import (
	"context"
)


// 消息处理器定义
type P2AccessRecordCreatedV1Handler struct {
	handler func(context.Context, *P2AccessRecordCreatedV1) error
}

func NewP2AccessRecordCreatedV1Handler(handler func(context.Context, *P2AccessRecordCreatedV1) error) *P2AccessRecordCreatedV1Handler{
   h := &P2AccessRecordCreatedV1Handler{handler: handler}
   return h
}

// 返回事件的消息体的实例，用于反序列化用
func (h *P2AccessRecordCreatedV1Handler) Event() interface{} {
	return &P2AccessRecordCreatedV1{}
}

// 回调开发者注册的handle
func (h *P2AccessRecordCreatedV1Handler) Handle(ctx context.Context, event interface{}) error {
	return h.handler(ctx, event.(*P2AccessRecordCreatedV1))
}


// 消息处理器定义
type P2UserUpdatedV1Handler struct {
	handler func(context.Context, *P2UserUpdatedV1) error
}

func NewP2UserUpdatedV1Handler(handler func(context.Context, *P2UserUpdatedV1) error) *P2UserUpdatedV1Handler{
   h := &P2UserUpdatedV1Handler{handler: handler}
   return h
}

// 返回事件的消息体的实例，用于反序列化用
func (h *P2UserUpdatedV1Handler) Event() interface{} {
	return &P2UserUpdatedV1{}
}

// 回调开发者注册的handle
func (h *P2UserUpdatedV1Handler) Handle(ctx context.Context, event interface{}) error {
	return h.handler(ctx, event.(*P2UserUpdatedV1))
}