// Package passport code generated by oapi sdk gen
package passport

import (
	"context"
	"net/http"

	"github.com/larksuite/oapi-sdk-go/core"
)

/**
构建业务域服务实例
**/
func NewService(httpClient *http.Client, config *core.Config) *PassportService {
	p := &PassportService{httpClient: httpClient, config: config}
	p.Session = &session{service: p}
	return p
}

/**
业务域服务定义
**/
type PassportService struct {
	httpClient *http.Client
	config     *core.Config
	Session    *session
}

/**
资源服务定义
**/
type session struct {
	service *PassportService
}

/**
资源服务方法定义
**/
func (s *session) Query(ctx context.Context, req *QuerySessionReq, options ...core.RequestOptionFunc) (*QuerySessionResp, error) {
	// 发起请求
	rawResp, err := core.SendRequest(ctx, s.service.config, http.MethodPost,
		"/open-apis/passport/v1/sessions/query", []core.AccessTokenType{core.AccessTokenTypeTenant}, req, options...)
	if err != nil {
		return nil, err
	}
	// 反序列响应结果
	resp := &QuerySessionResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
