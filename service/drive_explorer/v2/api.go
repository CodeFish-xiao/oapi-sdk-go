// Package drive_explorer code generated by oapi sdk gen
package drive_explorer

import (
	"net/http"
	"context"
	
	"github.com/feishu/oapi-sdk-go/core"
)

/**
构建业务域服务实例
**/
func NewService(httpClient *http.Client, config *core.Config) *DriveExplorerService {
	d := &DriveExplorerService{httpClient:httpClient,config:config}
	d.File = &file{service: d}
	d.Folder = &folder{service: d}
	return d
}

/**
业务域服务定义
**/
type DriveExplorerService struct {
	httpClient *http.Client
	config *core.Config
	File *file
	Folder *folder
}


/**
资源服务定义
**/
type file struct {
   service *DriveExplorerService
}
type folder struct {
   service *DriveExplorerService
}
/**
资源服务方法定义
**/
func (f *file) Copy(ctx context.Context, req *CopyFileReq, options ...core.RequestOptionFunc) (*CopyFileResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodPost,
		"/open-apis/drive/explorer/v2/file/copy/files/:fileToken", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, req, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &CopyFileResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
func (f *file) Create(ctx context.Context, req *CreateFileReq, options ...core.RequestOptionFunc) (*CreateFileResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodPost,
		"/open-apis/drive/explorer/v2/file/:folderToken", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, req, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &CreateFileResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
func (f *file) DocsDelete(ctx context.Context, req *DocsDeleteFileReq, options ...core.RequestOptionFunc) (*DocsDeleteFileResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodDelete,
		"/open-apis/drive/explorer/v2/file/docs/:docToken", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, req, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &DocsDeleteFileResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
func (f *file) SpreadsheetsDelete(ctx context.Context, req *SpreadsheetsDeleteFileReq, options ...core.RequestOptionFunc) (*SpreadsheetsDeleteFileResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodDelete,
		"/open-apis/drive/explorer/v2/file/spreadsheets/:spreadsheetToken", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, req, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &SpreadsheetsDeleteFileResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
func (f *folder) Children(ctx context.Context, req *ChildrenFolderReq, options ...core.RequestOptionFunc) (*ChildrenFolderResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodGet,
		"/open-apis/drive/explorer/v2/folder/:folderToken/children", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, req, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &ChildrenFolderResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
func (f *folder) Create(ctx context.Context, req *CreateFolderReq, options ...core.RequestOptionFunc) (*CreateFolderResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodPost,
		"/open-apis/drive/explorer/v2/folder/:folderToken", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, req, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &CreateFolderResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
func (f *folder) Meta(ctx context.Context, req *MetaFolderReq, options ...core.RequestOptionFunc) (*MetaFolderResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodGet,
		"/open-apis/drive/explorer/v2/folder/:folderToken/meta", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, req, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &MetaFolderResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}
func (f *folder) RootMeta(ctx context.Context,  options ...core.RequestOptionFunc) (*RootMetaFolderResp, error) {

	// 发起请求
	rawResp, err := core.SendRequest(ctx,f.service.config, http.MethodGet,
		"/open-apis/drive/explorer/v2/root_folder/meta", []core.AccessTokenType{core.AccessTokenTypeTenant, core.AccessTokenTypeUser}, nil, options...)
	if err != nil {
		return nil, err
	}

	// 反序列响应结果
	resp := &RootMetaFolderResp{RawResponse: rawResp}
	err = rawResp.JSONUnmarshalBody(resp)
	if err != nil {
		return nil, err
	}
	return resp, err
}